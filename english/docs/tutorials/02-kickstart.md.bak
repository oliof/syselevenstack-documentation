[TOC]

# What are the prerequisites?

One prerequesite to talk to the SysEleven Stack API are the OpenStack command line tools.
You have the choice of either installing the command line tools on a local machine, or
you set up a virtual machine where they are pre-installed. For this tutorial we do the
latter, so we can assume a well defined environment.

If you want to install the command line tools locally, follow the [official documentation provided by the OpenStack project](http://docs.openstack.org/user-guide/common/cli_install_openstack_command_line_clients.html).

# First steps and set up of our tool host:

Sign in to the [Dashboard](https://dashboard.cloud.syseleven.net) using the username and
password you received from SysEleven.

*    Step one: Upload your public ssh key in the dashboard. That way you can
   automatically inject the key in virtual machines and access them using SSH.
   Should you accidentally encounter the dashboard in a language other than English,
   switch it back to English so all the terms match the ones used in this tutorial.
   To do that, click on your username in the top right, and choose English as the
   language in the user settings.
   To add an SSH key, select the "Compute" tab, then "Access and Security", then "Key
   Pairs". There, choose "Import Key Pair", set a name we keep in mind for later use,
   and paste the public SSH key.

*   Step two: Choose a template for a virtual machine that provides us with all the tools
   needed to work with the SysEleven Stack. The template is available on
   [Github:](https://raw.githubusercontent.com/syseleven/heattemplates-examples/master/gettingStarted/sysElevenStackKickstart.yaml)
   Copy that URL to use it in the Dashboard in the next step.

*   Step three: Use that template in the Dashboard at *Orchestration --> Stacks --> Launch Stack*
   to start the template. Click on *URL* and paste the URL you copied in the previous step. Leave
   the field *Environment Source* as is and click *next*. Set the name to *Toolbox* and set *Creation
   Timeout* to 1 minute. The field *Password* is irrelevant, but we need to add something to be able
   to continue. The parameter *key_name* needs to be filled with the name you set for your public
   SSH key. Then, click *Launch* and your first virtual machine starts.
   
*    Step four: Log in to your machine via SSH for a first test. To do that, you need to know the public
   IP address assigned to the virtual machine. You can look it up under *Compute* --> * Instances* if you
   click on the virtual machine that was just created. The user name to log into the machine is `syseleven`,
   so the full ssh command to get onto the machine in a terminal window is:
  
```
ssh syseleven@<virtual-machine's-IP-address>
```
   
    If you get a warning `REMOTE HOST HAS CHANGED!` doing that, it means that you did
   reach another machine with that IP earlier. This can happen under normal operations
   in the SysEleven Stack, since machines are torn down and recreated all the time, and
   the IP addresses used will be re-used after being returned to the pool of available
   addresses. For now, the easiest way to deal with this error is to revoke the previously
   known host key for this IP address by running the following command:
  
```
ssh-keygen -R <meineIP-Adresse>
```

*   Now you can log into the virtual machine. If you get the message `Connection refused`,
   the machine may not have launched completely. If still holds true after more than a couple
   minutes, please get in touch with our [support](mailto:cloudsupport@syseleven.de) and let
   us know the public IP address you try to connect to.
   
   
     To test whether the automatic installation of the OpenStack command line tools was
successful, run the following command: 

```
openstack --help
```

If you see a list of options to use nova as a result, the installation worked. If not, please
get in touch with our [support](mailto:cloudsupport@syseleven.de) and tell us the URL of the
template you used.

Now you can start working, the only thing missing is a way to authenticate when using the
SysEleven Stack API. You will fine a file named `openrc` in the home directory of the user
"syseleven". You need to set the values for `tenant_name`, `user_name`and `user_password`
with the ones you received from SysEleven.

As soon as those values are set, we can use the openrc file to set up our environment so the
openstack commandline tools use the right API endpoints, user name, and project you want to use,
as well as the password necessary for authentication. To do that, run the following command:

```
source openrc
```

Now you can work with the SysEleven Stack. As a first test, try to get a list of stacks
you are running:

```
openstack stack list
```

We expect the stack named "Toolbox" to be listed in the result.

## More examples

As a next step, check out our collection of Heat Templates which we tested to work
with the SysEleven Stack and published on Github. One way to do this is like this:

```
git clone https://github.com/syseleven/heattemplates-examples.git
cd heattemplates-examples
cd example-project
openstack stack create -t syseleven.yaml <myStackName>
```

You can choose any name for your stack, but it must not start with a number.

Running

```
openstack stack resource list <stackName>
```

you can see which resources are currently being created. You can find a visualization of the process in the [Dashboard](https://dashboard.cloud.syseleven.net),
we recommoned checking out the "Network Topology" tab.

The template above creates a stack with several virtual machines (load balancer, web server
and database server). The servers are provisioned using "Cloud-Init" and provide a sample
application. After stack creation completed successfully, you can enter the IP address of
the load balancer in your web browser and see the sample application. If all you see is the
NGINX default website, stack creation has not finished yet. In that case, wait a couple minutes,
and try again.
